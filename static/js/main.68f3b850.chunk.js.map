{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","firestore","Signin","onClick","provider","GoogleAuthProvider","signInWithPopup","catch","err","console","log","SignOut","signOut","ChatRoom","dummy","useRef","messageRef","collection","query","orderBy","useCollectionData","idField","messages","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","chat","document","getElementById","value","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behaviour","map","msg","ChatMessage","message","ref","onSubmit","required","id","type","props","messageClass","className","alt","src","App","useAuthState","user","ReactDOM","render","StrictMode"],"mappings":"iQAkBAA,IAASC,cAVY,CACnBC,OAAQ,0CACNC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAcnB,IAAMC,EAAOT,IAASS,OAChBC,EAAWV,IAASW,YAE1B,SAASC,IAOP,OACA,wBAAQC,QAPR,WAEE,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,GAAUG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,gBAAiBF,OAI3E,mCAIF,SAASG,IACP,OACE,wBAAQR,QAAS,kBAAMb,IAASS,OAAOa,WAAvC,sBAIJ,SAASC,IAGP,IAAMC,EAAMC,mBACNC,EAAahB,EAASiB,WAAW,YACjCC,EAAQF,EAAWG,QAAQ,aAJnC,EAMsBC,YAAkBF,EAAO,CAAEG,QAAS,OAAjDC,EANT,oBAOEb,QAAQC,IAAIY,GACZ,IAAMC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ3B,EAAK4B,YAAvBC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZb,EAAWc,IAAI,CACnBC,KAAMC,SAASC,eAAe,eAAeC,MAC7CN,MACAC,WACAM,UAAW7C,IAASW,UAAUmC,WAAWC,oBATzB,OAWlBL,SAASC,eAAe,eAAeC,MAAQ,GAC/CpB,EAAMwB,QAAQC,eAAe,CAACC,UAAU,WAZtB,2CAAH,sDAcjB,OACE,qCACA,iCACGlB,GAAYA,EAASmB,KAAI,SAASC,GACjC,OAAQ,cAACC,EAAD,CAAaC,QAASF,OAE9B,qBAAKG,IAAK/B,OAGd,uBAAMgC,SAAUvB,EAAhB,UACE,uBAAOwB,UAAQ,EAACC,GAAG,cAAcC,KAAK,SACtC,wBAAQA,KAAK,SAAb,wBAON,SAASN,EAAYO,GAAQ,IAAD,EACMA,EAAMN,QAA9Bb,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SACnBpB,QAAQC,IAAIwC,EAAMN,SAElB,IAAMO,EAAevB,IAAQ7B,EAAK4B,YAAYC,IAAM,OAAS,WAE7D,OACE,sBAAKwB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAI,KAAKC,IAAKzB,IACnB,4BAAIE,IAFN,OAMWwB,MApFf,WACC,IAAD,EACiBC,YAAazD,GAArB0D,EADT,oBAEE,OACE,qBAAKL,UAAU,MAAf,SACGK,EAAO,qCAAE,cAAC9C,EAAD,IAAU,cAACE,EAAD,IAAZ,OAA8B,cAACX,EAAD,OCpB5CwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASC,eAAe,W","file":"static/js/main.68f3b850.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./index.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDeaWp4h3cR_JoDGEO9JsF4PI0pR6XIHRE\",\n    authDomain: \"chat-app-32910.firebaseapp.com\",\n    projectId: \"chat-app-32910\",\n    storageBucket: \"chat-app-32910.appspot.com\",\n    messagingSenderId: \"282859378167\",\n    appId: \"1:282859378167:web:3db1378e0d4d8a60844af2\",\n    measurementId: \"G-HTNBX6X4BY\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() \n{\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      {user ? <><SignOut/><ChatRoom/> </> : <Signin/>}\n    </div>\n  );\n}\nconst auth = firebase.auth();\nconst database = firebase.firestore();\n\nfunction Signin() {\n  function signInWithGoogle()\n  {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).catch(err => console.log('Error Occured', err));  \n  }\n\n  return (\n  <button onClick={signInWithGoogle}> Sign In with Google </button>\n  );\n}\n\nfunction SignOut() {\n  return (\n    <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n  );\n}\n\nfunction ChatRoom() \n{\n\n  const dummy=useRef();\n  const messageRef = database.collection(\"messages\");\n  const query = messageRef.orderBy(\"createdAt\");\n\n  const [messages ] = useCollectionData(query, { idField: \"id\"}); // it is a hook which returns the array of objects\n  console.log(messages);\n  const sendMessage = async(e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messageRef.add({\n      chat: document.getElementById('chatMessage').value,\n      uid,\n      photoURL,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    document.getElementById('chatMessage').value = '';\n    dummy.current.scrollIntoView({behaviour:\"smooth\"});\n  }\n  return (\n    <>\n    <main>  \n      {messages && messages.map(function(msg){\n        return( <ChatMessage message={msg}/>);\n        })}\n        <div ref={dummy}></div>  \n    </main>\n    \n    <form onSubmit={sendMessage}> \n      <input required id='chatMessage' type=\"text\"></input> \n      <button type=\"submit\">Send</button>\n    </form>\n    </>\n\n  );\n}\n\nfunction ChatMessage(props) {\n  const { chat, uid, photoURL } = props.message;\n  console.log(props.message);\n\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"recieved\";\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img alt=\"NA\" src={photoURL} />\n      <p>{chat}</p>;\n    </div>\n  );\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}